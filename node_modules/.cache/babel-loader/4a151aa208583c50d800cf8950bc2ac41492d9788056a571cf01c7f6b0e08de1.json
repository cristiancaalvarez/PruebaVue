{"ast":null,"code":"import { createVNode as _createVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-537a8db2\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"conten-form\"\n};\nconst _hoisted_2 = {\n  class: \"form-group\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"message-error\"\n};\nconst _hoisted_4 = {\n  key: 1,\n  class: \"message-error\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"form\", {\n    onSubmit: _withModifiers($setup.addProject, [\"prevent\"]),\n    class: \"form\"\n  }, [_createElementVNode(\"div\", _hoisted_2, [_createVNode($setup[\"CustomInput\"], {\n    label: \"Nombre del proyecto *\",\n    modelValue: $setup.newProject.name,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.newProject.name = $event),\n    type: \"text\"\n  }, null, 8 /* PROPS */, [\"modelValue\"]), $setup.v$.name.$error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _toDisplayString($setup.v$.name.required.$message), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createVNode($setup[\"CustomTexarea\"], {\n    label: \"Descripcion del proyecto *\",\n    modelValue: $setup.newProject.description,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.newProject.description = $event)\n  }, null, 8 /* PROPS */, [\"modelValue\"]), $setup.v$.description.$error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, _toDisplayString($setup.v$.description.required.$message), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createVNode($setup[\"CustomInput\"], {\n    label: \"Estado del proyecto (Activo/ inactivo)\",\n    modelValue: $setup.newProject.status,\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.newProject.status = $event),\n    type: \"checkbox\"\n  }, null, 8 /* PROPS */, [\"modelValue\"])]), _createVNode($setup[\"CustomButton\"], {\n    class: \"button\",\n    label: \"Enviar\",\n    type: \"submit\"\n  })], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","onSubmit","_withModifiers","$setup","addProject","_hoisted_2","_createVNode","label","modelValue","newProject","name","_cache","$event","type","v$","$error","_hoisted_3","_toDisplayString","required","$message","_createCommentVNode","description","_hoisted_4","status"],"sources":["C:\\Users\\RCG\\Documents\\GitHub\\PruebaVue3.0\\src\\components\\molecules\\CustomForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"conten-form\">\r\n    <form @submit.prevent=\"addProject\" class=\"form\">\r\n      <div class=\"form-group\">\r\n        <CustomInput\r\n          label=\"Nombre del proyecto *\"\r\n          v-model=\"newProject.name\"\r\n          type=\"text\"\r\n        />\r\n        <div class=\"message-error\" v-if=\"v$.name.$error\"> {{ v$.name.required.$message }} </div>\r\n        <CustomTexarea\r\n          label=\"Descripcion del proyecto *\"\r\n          v-model=\"newProject.description\"\r\n        />\r\n        <div class=\"message-error\" v-if=\"v$.description.$error\">{{ v$.description.required.$message }}</div>\r\n        <CustomInput\r\n          label=\"Estado del proyecto (Activo/ inactivo)\"\r\n          v-model=\"newProject.status\"\r\n          type=\"checkbox\"\r\n        />\r\n      </div>\r\n      <CustomButton class=\"button\" label=\"Enviar\" type=\"submit\" />\r\n    </form>\r\n  </div>\r\n</template>\r\n<script setup>\r\nimport { computed, ref, watch, defineProps } from 'vue';\r\nimport { useStore } from 'vuex';\r\nimport { useVuelidate } from '@vuelidate/core';\r\nimport { required, helpers } from '@vuelidate/validators';\r\nimport CustomInput from '../atoms/CustomInput.vue';\r\nimport CustomTexarea from '../atoms/CustomTexarea.vue';\r\nimport CustomButton from '../atoms/CustomButton.vue';\r\n\r\nconst store = useStore();\r\n\r\nconst props = defineProps({\r\n    dataEdit: Object,\r\n});\r\n\r\nconst newProject = ref({\r\n  name: '',\r\n  description: '',\r\n  status: false\r\n});\r\n\r\nconst rules = {\r\n name: { required: helpers.withMessage('El nombre es requerido', required) },\r\n description: { required: helpers.withMessage('La descripciÃ³n es requerida', required) }\r\n};\r\n\r\nconst v$ = useVuelidate(rules, newProject);\r\n\r\nconst validationForm = computed(() => {\r\n  v$.value.$touch();\r\n  return !v$.value.$invalid;\r\n})\r\n\r\nconst addProject = () => { \r\n  if (validationForm.value) {\r\n    const project = { ...newProject.value };\r\n    submitProject(project);\r\n    resetForm()\r\n  }\r\n};\r\n\r\nconst resetForm = () => {\r\n  newProject.value = { name: '', description: '', status: false };\r\n  v$.value.$reset();\r\n}\r\n\r\nconst submitProject = (project) => {\r\n  try {\r\n    project.status = project.status ? {label: 'Activo', _id: '1'} : {label: 'Inactivo', _id: '2'}\r\n    if (!project._id) return store.dispatch('projects/addProject', project);\r\n    store.dispatch('projects/editProject', project);\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nwatch(() => props.dataEdit, (propEdit) => {\r\n  propEdit.status = propEdit.status._id === '1' ? true : false\r\n  newProject.value = propEdit\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.form-group {\r\n  margin-bottom: 10px ;\r\n}\r\n.message-error {\r\n  color: red;\r\n}\r\n</style>"],"mappings":";;;EACOA,KAAK,EAAC;AAAa;;EAEfA,KAAK,EAAC;AAAY;;EAH7BC,GAAA;EASaD,KAAK,EAAC;;;EATnBC,GAAA;EAcaD,KAAK,EAAC;;;uBAbjBE,mBAAA,CAsBM,OAtBNC,UAsBM,GArBJC,mBAAA,CAoBO;IApBAC,QAAM,EAFjBC,cAAA,CAE2BC,MAAA,CAAAC,UAAU;IAAER,KAAK,EAAC;MACvCI,mBAAA,CAiBM,OAjBNK,UAiBM,GAhBJC,YAAA,CAIEH,MAAA;IAHAI,KAAK,EAAC,uBAAuB;IALvCC,UAAA,EAMmBL,MAAA,CAAAM,UAAU,CAACC,IAAI;IANlC,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAMmBT,MAAA,CAAAM,UAAU,CAACC,IAAI,GAAAE,MAAA;IACxBC,IAAI,EAAC;2CAE0BV,MAAA,CAAAW,EAAE,CAACJ,IAAI,CAACK,MAAM,I,cAA/CjB,mBAAA,CAAwF,OAAxFkB,UAAwF,EAAAC,gBAAA,CAAnCd,MAAA,CAAAW,EAAE,CAACJ,IAAI,CAACQ,QAAQ,CAACC,QAAQ,oBATtFC,mBAAA,gBAUQd,YAAA,CAGEH,MAAA;IAFAI,KAAK,EAAC,4BAA4B;IAX5CC,UAAA,EAYmBL,MAAA,CAAAM,UAAU,CAACY,WAAW;IAZzC,uBAAAV,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAYmBT,MAAA,CAAAM,UAAU,CAACY,WAAW,GAAAT,MAAA;2CAEAT,MAAA,CAAAW,EAAE,CAACO,WAAW,CAACN,MAAM,I,cAAtDjB,mBAAA,CAAoG,OAApGwB,UAAoG,EAAAL,gBAAA,CAAzCd,MAAA,CAAAW,EAAE,CAACO,WAAW,CAACH,QAAQ,CAACC,QAAQ,oBAdnGC,mBAAA,gBAeQd,YAAA,CAIEH,MAAA;IAHAI,KAAK,EAAC,wCAAwC;IAhBxDC,UAAA,EAiBmBL,MAAA,CAAAM,UAAU,CAACc,MAAM;IAjBpC,uBAAAZ,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAiBmBT,MAAA,CAAAM,UAAU,CAACc,MAAM,GAAAX,MAAA;IAC1BC,IAAI,EAAC;6CAGTP,YAAA,CAA4DH,MAAA;IAA9CP,KAAK,EAAC,QAAQ;IAACW,KAAK,EAAC,QAAQ;IAACM,IAAI,EAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}