{"ast":null,"code":"import { createVNode as _createVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-4cbcdc52\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"form-group\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"message-error\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"message-error\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"form\", {\n    onSubmit: _withModifiers($setup.addTasks, [\"prevent\"]),\n    class: \"form\"\n  }, [_createElementVNode(\"div\", _hoisted_1, [_createVNode($setup[\"CustomInput\"], {\n    label: \"Nombre de la tarea *\",\n    modelValue: $setup.newTask.name,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.newTask.name = $event),\n    type: \"text\"\n  }, null, 8 /* PROPS */, [\"modelValue\"]), $setup.v$.name.$error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _toDisplayString($setup.v$.name.required.$message), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createVNode($setup[\"CustomTexarea\"], {\n    label: \"Descripcion de la tarea *\",\n    modelValue: $setup.newTask.description,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.newTask.description = $event)\n  }, null, 8 /* PROPS */, [\"modelValue\"]), $setup.v$.name.$error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _toDisplayString($setup.v$.description.required.$message), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createVNode($setup[\"CustomSelect\"], {\n    class: \"w-100\",\n    options: $setup.optionsSelect,\n    modelValue: $setup.newTask.status,\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.newTask.status = $event)\n  }, null, 8 /* PROPS */, [\"options\", \"modelValue\"])]), _createVNode($setup[\"CustomButton\"], {\n    class: \"button\",\n    label: \"Enviar\",\n    type: \"submit\"\n  })], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_createElementVNode","onSubmit","_withModifiers","$setup","addTasks","_hoisted_1","_createVNode","label","modelValue","newTask","name","_cache","$event","type","v$","$error","_hoisted_2","_toDisplayString","required","$message","_createCommentVNode","description","_hoisted_3","options","optionsSelect","status"],"sources":["C:\\Users\\RCG\\Documents\\GitHub\\PruebaVue3.0\\src\\components\\molecules\\CustomFormTasks.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <form @submit.prevent=\"addTasks\" class=\"form\">\r\n      <div class=\"form-group\">\r\n        <CustomInput\r\n          label=\"Nombre de la tarea *\"\r\n          v-model=\"newTask.name\"\r\n          type=\"text\"\r\n        />\r\n        <div class=\"message-error\" v-if=\"v$.name.$error\"> {{ v$.name.required.$message }} </div>\r\n        <CustomTexarea\r\n          label=\"Descripcion de la tarea *\"\r\n          v-model=\"newTask.description\"\r\n        />\r\n        <div class=\"message-error\" v-if=\"v$.name.$error\"> {{ v$.description.required.$message }} </div>\r\n  \r\n        <CustomSelect class=\"w-100\" :options=\"optionsSelect\" v-model=\"newTask.status\" />\r\n      </div>\r\n      <CustomButton class=\"button\" label=\"Enviar\" type=\"submit\" />\r\n    </form>\r\n  </div>\r\n</template>\r\n<script setup>\r\nimport { computed, ref, watch, defineProps } from 'vue';\r\nimport { useStore } from 'vuex';\r\nimport { useVuelidate } from '@vuelidate/core';\r\nimport { required, helpers } from '@vuelidate/validators';\r\nimport CustomInput from '../atoms/CustomInput.vue';\r\nimport CustomTexarea from '../atoms/CustomTexarea.vue';\r\nimport CustomSelect from '../atoms/CustomSelect.vue';\r\nimport CustomButton from '../atoms/CustomButton.vue';\r\nimport { useRoute } from 'vue-router';\r\n\r\nconst store = useStore();\r\n\r\nconst route = useRoute();\r\nconst idProject = route.params.id;\r\n\r\nconst props = defineProps({\r\n    dataEdit: Object,\r\n});\r\n\r\nconst newTask = ref({\r\n  name: '',\r\n  description: '',\r\n  status: {label: 'Pendiente', _id: '0'}\r\n});\r\n\r\nconst optionsSelect = ref([\r\n    {label: 'Pendiente', _id: '0'},\r\n    {label: 'En progreso', _id: '1'},\r\n    {label: 'Completado', _id: '2'}\r\n]);\r\n\r\nconst rules = {\r\n  name: { required: helpers.withMessage('El nombre es requerido', required) },\r\n  description: { required: helpers.withMessage('La descripciÃ³n es requerida', required) }\r\n};\r\n\r\nwatch(() => props.dataEdit, (propEdit) => {\r\n  newTask.value = propEdit\r\n});\r\n\r\nconst v$ = useVuelidate(rules, newTask);\r\n\r\nconst validationForm = computed(() => {\r\n  v$.value.$touch();\r\n  return !v$.value.$invalid;\r\n})\r\n\r\nconst addTasks = () => { \r\n  if (validationForm.value) {\r\n    const project = { ...newTask.value };\r\n    submitProject(project);\r\n    resetForm()\r\n  }\r\n};\r\n\r\nconst resetForm = () => {\r\n  newTask.value = { name: '', description: '', status: {label: 'Pendiente', _id: '0'} };\r\n  v$.value.$reset();\r\n}\r\n\r\nconst submitProject = (project) => {\r\n  try {\r\n    if (!project._id) return store.dispatch('projects/addTask', {idProject, newTask: project});\r\n    store.dispatch('projects/editTask', {idProject, newTask: project});\r\n\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.form-group {\r\n  margin-bottom: 10px ;\r\n}\r\n\r\n.message-error {\r\n  color: red;\r\n}\r\n</style>"],"mappings":";;;EAGWA,KAAK,EAAC;AAAY;;EAH7BC,GAAA;EASaD,KAAK,EAAC;;;EATnBC,GAAA;EAcaD,KAAK,EAAC;;;uBAbjBE,mBAAA,CAmBM,cAlBJC,mBAAA,CAiBO;IAjBAC,QAAM,EAFjBC,cAAA,CAE2BC,MAAA,CAAAC,QAAQ;IAAEP,KAAK,EAAC;MACrCG,mBAAA,CAcM,OAdNK,UAcM,GAbJC,YAAA,CAIEH,MAAA;IAHAI,KAAK,EAAC,sBAAsB;IALtCC,UAAA,EAMmBL,MAAA,CAAAM,OAAO,CAACC,IAAI;IAN/B,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAMmBT,MAAA,CAAAM,OAAO,CAACC,IAAI,GAAAE,MAAA;IACrBC,IAAI,EAAC;2CAE0BV,MAAA,CAAAW,EAAE,CAACJ,IAAI,CAACK,MAAM,I,cAA/ChB,mBAAA,CAAwF,OAAxFiB,UAAwF,EAAAC,gBAAA,CAAnCd,MAAA,CAAAW,EAAE,CAACJ,IAAI,CAACQ,QAAQ,CAACC,QAAQ,oBATtFC,mBAAA,gBAUQd,YAAA,CAGEH,MAAA;IAFAI,KAAK,EAAC,2BAA2B;IAX3CC,UAAA,EAYmBL,MAAA,CAAAM,OAAO,CAACY,WAAW;IAZtC,uBAAAV,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAYmBT,MAAA,CAAAM,OAAO,CAACY,WAAW,GAAAT,MAAA;2CAEGT,MAAA,CAAAW,EAAE,CAACJ,IAAI,CAACK,MAAM,I,cAA/ChB,mBAAA,CAA+F,OAA/FuB,UAA+F,EAAAL,gBAAA,CAA1Cd,MAAA,CAAAW,EAAE,CAACO,WAAW,CAACH,QAAQ,CAACC,QAAQ,oBAd7FC,mBAAA,gBAgBQd,YAAA,CAAgFH,MAAA;IAAlEN,KAAK,EAAC,OAAO;IAAE0B,OAAO,EAAEpB,MAAA,CAAAqB,aAAa;IAhB3DhB,UAAA,EAgBsEL,MAAA,CAAAM,OAAO,CAACgB,MAAM;IAhBpF,uBAAAd,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAgBsET,MAAA,CAAAM,OAAO,CAACgB,MAAM,GAAAb,MAAA;wDAE9EN,YAAA,CAA4DH,MAAA;IAA9CN,KAAK,EAAC,QAAQ;IAACU,KAAK,EAAC,QAAQ;IAACM,IAAI,EAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}