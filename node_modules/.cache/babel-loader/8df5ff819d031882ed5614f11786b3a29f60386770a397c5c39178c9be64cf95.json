{"ast":null,"code":"import { computed } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRoute } from 'vue-router';\nimport CustomButton from '../atoms/CustomButton.vue';\nimport CustomChart from '../atoms/CustomChart.vue';\nexport default {\n  __name: 'CustomTasks',\n  emits: ['clickedEdit'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const store = useStore();\n    const route = useRoute();\n    const idProject = route.params.id;\n    const taksList = computed(() => {\n      let projects = store.getters['projects/tasksList'](idProject);\n      return projects;\n    });\n    const deleteTasks = idTask => {\n      store.dispatch('projects/deleteTask', {\n        idProject,\n        idTask\n      });\n    };\n    const emit = __emit;\n    const editTask = product => {\n      emit('clickedEdit', product);\n    };\n    const statusCounts = computed(() => {\n      const counts = {\n        '0': 0,\n        '1': 0,\n        '2': 0\n      };\n      taksList.value.tasks.forEach(item => {\n        counts[item.status._id]++;\n      });\n      return counts;\n    });\n    const series = computed(() => Object.values(statusCounts.value));\n    const chartOptions = {\n      labels: ['Pendiente', 'En progreso', 'Completada']\n    };\n    const __returned__ = {\n      store,\n      route,\n      idProject,\n      taksList,\n      deleteTasks,\n      emit,\n      editTask,\n      statusCounts,\n      series,\n      chartOptions,\n      computed,\n      get useStore() {\n        return useStore;\n      },\n      get useRoute() {\n        return useRoute;\n      },\n      CustomButton,\n      CustomChart\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["computed","useStore","useRoute","CustomButton","CustomChart","store","route","idProject","params","id","taksList","projects","getters","deleteTasks","idTask","dispatch","emit","__emit","editTask","product","statusCounts","counts","value","tasks","forEach","item","status","_id","series","Object","values","chartOptions","labels"],"sources":["C:/Users/RCG/Documents/GitHub/PruebaVue3.0/src/components/organisms/CustomTasks.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>Lista de tareas del proyecto {{ taksList.name }}</h2>\r\n    <hr>\r\n    <div v-if=\"taksList.tasks.length > 0\">\r\n      <ul class=\"task-list\">\r\n        <li v-for=\"item in taksList.tasks\" :key=\"item._id\" class=\"task-item\">\r\n          <span>Proyecto:{{ item.name }}</span> - <span>{{ item.description }}</span> - <span>Estado: {{ item.status.label }}</span>\r\n          <CustomButton class=\"button-list\" label=\"Editar\" @clicked=\"editTask(item)\" />\r\n          <CustomButton class=\"button-list button-error\" @clicked=\"deleteTasks(item._id)\" aria-label=\"Eliminar tarea\" label=\"Eliminar\" />\r\n        </li>\r\n      </ul>\r\n      <div class=\"content-chart\">\r\n        <CustomChart :labels=\"chartOptions\" :series=\"series\"/>\r\n      </div>\r\n    </div>\r\n    <div v-else>\r\n      <span>No cuenta con tareas asignadas</span>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script setup>\r\nimport { computed, defineEmits } from 'vue'\r\nimport { useStore } from 'vuex';\r\nimport { useRoute } from 'vue-router'\r\nimport CustomButton from '../atoms/CustomButton.vue';\r\nimport CustomChart from '../atoms/CustomChart.vue';\r\n\r\nconst store = useStore();\r\nconst route = useRoute();\r\n\r\nconst idProject = route.params.id;\r\nconst taksList = computed(() => {\r\n  let projects = store.getters['projects/tasksList'](idProject);\r\n  return projects;\r\n});\r\n\r\nconst deleteTasks = (idTask) => {\r\n  store.dispatch('projects/deleteTask', {idProject, idTask});\r\n}\r\n\r\nconst emit = defineEmits(['clickedEdit']);\r\n\r\nconst editTask = (product) => {\r\n  emit('clickedEdit', product);\r\n}\r\n\r\nconst statusCounts = computed(() => {\r\n    const counts = { '0': 0, '1': 0, '2': 0 };\r\n    taksList.value.tasks.forEach(item => {\r\n        counts[item.status._id]++;\r\n    });\r\n    return counts;\r\n});\r\n\r\nconst series = computed(() => Object.values(statusCounts.value))\r\nconst chartOptions = {\r\n    labels: ['Pendiente', 'En progreso', 'Completada']\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.task-list {\r\n list-style-type: none;\r\n padding: 0;\r\n margin: 0;\r\n}\r\n\r\n.task-item {\r\n display: flex;\r\n justify-content: space-between;\r\n align-items: center;\r\n padding: 10px;\r\n border-bottom: 1px solid #ddd;\r\n}\r\n\r\n.task-item:last-child {\r\n border-bottom: none;\r\n}\r\n\r\n.task-item span {\r\n margin-right: 10px;\r\n}\r\n\r\n/* chart*/\r\n.content-chart {\r\n  width: 50%;\r\n  margin: auto;\r\n  margin-top: 50px;\r\n}\r\n\r\n@media (max-width: 1024px) {\r\n  .content-chart {\r\n    width: 80%;\r\n  }\r\n}\r\n@media (max-width: 425px) {\r\n  .content-chart {\r\n    width: 100%;\r\n  }\r\n}\r\n\r\n</style>"],"mappings":"AAsBA,SAASA,QAAqB,QAAQ,KAAK;AAC3C,SAASC,QAAQ,QAAQ,MAAM;AAC/B,SAASC,QAAQ,QAAQ,YAAY;AACrC,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,WAAW,MAAM,0BAA0B;;;;;;;;;IAElD,MAAMC,KAAK,GAAGJ,QAAQ,CAAC,CAAC;IACxB,MAAMK,KAAK,GAAGJ,QAAQ,CAAC,CAAC;IAExB,MAAMK,SAAS,GAAGD,KAAK,CAACE,MAAM,CAACC,EAAE;IACjC,MAAMC,QAAQ,GAAGV,QAAQ,CAAC,MAAM;MAC9B,IAAIW,QAAQ,GAAGN,KAAK,CAACO,OAAO,CAAC,oBAAoB,CAAC,CAACL,SAAS,CAAC;MAC7D,OAAOI,QAAQ;IACjB,CAAC,CAAC;IAEF,MAAME,WAAW,GAAIC,MAAM,IAAK;MAC9BT,KAAK,CAACU,QAAQ,CAAC,qBAAqB,EAAE;QAACR,SAAS;QAAEO;MAAM,CAAC,CAAC;IAC5D,CAAC;IAED,MAAME,IAAI,GAAGC,MAA4B;IAEzC,MAAMC,QAAQ,GAAIC,OAAO,IAAK;MAC5BH,IAAI,CAAC,aAAa,EAAEG,OAAO,CAAC;IAC9B,CAAC;IAED,MAAMC,YAAY,GAAGpB,QAAQ,CAAC,MAAM;MAChC,MAAMqB,MAAM,GAAG;QAAE,GAAG,EAAE,CAAC;QAAE,GAAG,EAAE,CAAC;QAAE,GAAG,EAAE;MAAE,CAAC;MACzCX,QAAQ,CAACY,KAAK,CAACC,KAAK,CAACC,OAAO,CAACC,IAAI,IAAI;QACjCJ,MAAM,CAACI,IAAI,CAACC,MAAM,CAACC,GAAG,CAAC,EAAE;MAC7B,CAAC,CAAC;MACF,OAAON,MAAM;IACjB,CAAC,CAAC;IAEF,MAAMO,MAAM,GAAG5B,QAAQ,CAAC,MAAM6B,MAAM,CAACC,MAAM,CAACV,YAAY,CAACE,KAAK,CAAC,CAAC;IAChE,MAAMS,YAAY,GAAG;MACjBC,MAAM,EAAE,CAAC,WAAW,EAAE,aAAa,EAAE,YAAY;IACrD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}