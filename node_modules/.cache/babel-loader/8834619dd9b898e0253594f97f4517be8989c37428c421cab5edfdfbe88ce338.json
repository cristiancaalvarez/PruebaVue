{"ast":null,"code":"import { ref, computed } from 'vue';\nimport { useStore } from 'vuex';\nimport CustomForm from '../components/molecules/CustomForm.vue';\nimport CustomSelect from '../components/atoms/CustomSelect.vue';\nimport CustomInput from '../components/atoms/CustomInput.vue';\nimport CustomList from '../components/organisms/CustomList.vue';\nimport TemplateProjectPage from '../template/TemplateProjectPage.vue';\nexport default {\n  __name: 'PageProject',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const store = useStore();\n    const filterStatus = ref({\n      label: 'Todos',\n      _id: '0'\n    });\n    const searchName = ref('');\n    const optionsSelect = ref([{\n      label: 'Todos',\n      _id: '0'\n    }, {\n      label: 'Activos',\n      _id: '1'\n    }, {\n      label: 'Inactivos',\n      _id: '2'\n    }]);\n    const dataEdit = ref({});\n    const edit = product => {\n      dataEdit.value = product;\n    };\n    const filteredProjects = computed(() => {\n      let projects = store.getters['projects/projectsByStatus'](filterStatus.value);\n      if (searchName.value) {\n        projects = store.getters['projects/projectsByName'](searchName.value);\n      }\n      return projects;\n    });\n    const __returned__ = {\n      store,\n      filterStatus,\n      searchName,\n      optionsSelect,\n      dataEdit,\n      edit,\n      filteredProjects,\n      ref,\n      computed,\n      get useStore() {\n        return useStore;\n      },\n      CustomForm,\n      CustomSelect,\n      CustomInput,\n      CustomList,\n      TemplateProjectPage\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","useStore","CustomForm","CustomSelect","CustomInput","CustomList","TemplateProjectPage","store","filterStatus","label","_id","searchName","optionsSelect","dataEdit","edit","product","value","filteredProjects","projects","getters"],"sources":["C:/Users/RCG/Documents/GitHub/PruebaVue3.0/src/pages/PageProject.vue"],"sourcesContent":["<!-- ProjectsPage.vue -->\r\n<template>\r\n<TemplateProjectPage>\r\n    <template #title>\r\n        <h1>Proyectos</h1>\r\n    </template>\r\n    <template #form>\r\n        <CustomForm :dataEdit=\"dataEdit\" />\r\n    </template>\r\n    <template #filter>\r\n        <h2>Lista de proyectos</h2>\r\n        <hr>\r\n        <div class=\"filters\">\r\n            <div>\r\n                <CustomSelect class=\"w-100\" :options=\"optionsSelect\" v-model=\"filterStatus\"/>\r\n            </div>\r\n            <div>\r\n                <CustomInput v-model=\"searchName\" type=\"search\" placeholder=\"Buscar por nombre\"/>\r\n            </div>\r\n        </div>\r\n    </template>\r\n    <template #list>\r\n        <CustomList @clickedEdit=\"edit\" :items=\"filteredProjects\"/>\r\n    </template>\r\n</TemplateProjectPage>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed } from 'vue';\r\nimport { useStore } from 'vuex';\r\nimport CustomForm from '../components/molecules/CustomForm.vue';\r\nimport CustomSelect from '../components/atoms/CustomSelect.vue';\r\nimport CustomInput from '../components/atoms/CustomInput.vue';\r\nimport CustomList from '../components/organisms/CustomList.vue';\r\nimport TemplateProjectPage from '../template/TemplateProjectPage.vue';\r\n\r\nconst store = useStore();\r\n\r\nconst filterStatus = ref({label: 'Todos', _id: '0'});\r\nconst searchName = ref('');\r\nconst optionsSelect = ref([\r\n    {label: 'Todos', _id: '0'},\r\n    {label: 'Activos', _id: '1'},\r\n    {label: 'Inactivos', _id: '2'}\r\n]);\r\n\r\nconst dataEdit = ref({})\r\n\r\nconst edit = (product) => {\r\n    dataEdit.value = product;\r\n}\r\n\r\nconst filteredProjects = computed(() => {\r\n    let projects = store.getters['projects/projectsByStatus'](filterStatus.value);\r\n    if (searchName.value) {\r\n        projects = store.getters['projects/projectsByName'](searchName.value);\r\n    }\r\n    return projects;\r\n});\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.filters {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-between;\r\n    align-items: baseline;\r\n}\r\n\r\n.filters > div {\r\n flex: 1 0 45%;\r\n margin: 5px;\r\n}\r\n\r\n</style>"],"mappings":"AA4BA,SAASA,GAAG,EAAEC,QAAQ,QAAQ,KAAK;AACnC,SAASC,QAAQ,QAAQ,MAAM;AAC/B,OAAOC,UAAU,MAAM,wCAAwC;AAC/D,OAAOC,YAAY,MAAM,sCAAsC;AAC/D,OAAOC,WAAW,MAAM,qCAAqC;AAC7D,OAAOC,UAAU,MAAM,wCAAwC;AAC/D,OAAOC,mBAAmB,MAAM,qCAAqC;;;;;;;IAErE,MAAMC,KAAK,GAAGN,QAAQ,CAAC,CAAC;IAExB,MAAMO,YAAY,GAAGT,GAAG,CAAC;MAACU,KAAK,EAAE,OAAO;MAAEC,GAAG,EAAE;IAAG,CAAC,CAAC;IACpD,MAAMC,UAAU,GAAGZ,GAAG,CAAC,EAAE,CAAC;IAC1B,MAAMa,aAAa,GAAGb,GAAG,CAAC,CACtB;MAACU,KAAK,EAAE,OAAO;MAAEC,GAAG,EAAE;IAAG,CAAC,EAC1B;MAACD,KAAK,EAAE,SAAS;MAAEC,GAAG,EAAE;IAAG,CAAC,EAC5B;MAACD,KAAK,EAAE,WAAW;MAAEC,GAAG,EAAE;IAAG,CAAC,CACjC,CAAC;IAEF,MAAMG,QAAQ,GAAGd,GAAG,CAAC,CAAC,CAAC,CAAC;IAExB,MAAMe,IAAI,GAAIC,OAAO,IAAK;MACtBF,QAAQ,CAACG,KAAK,GAAGD,OAAO;IAC5B,CAAC;IAED,MAAME,gBAAgB,GAAGjB,QAAQ,CAAC,MAAM;MACpC,IAAIkB,QAAQ,GAAGX,KAAK,CAACY,OAAO,CAAC,2BAA2B,CAAC,CAACX,YAAY,CAACQ,KAAK,CAAC;MAC7E,IAAIL,UAAU,CAACK,KAAK,EAAE;QAClBE,QAAQ,GAAGX,KAAK,CAACY,OAAO,CAAC,yBAAyB,CAAC,CAACR,UAAU,CAACK,KAAK,CAAC;MACzE;MACA,OAAOE,QAAQ;IACnB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}